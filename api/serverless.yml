service: serverless-rest-api-with-dynamodb

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: python2.7
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    DYNAMODB_BAR_TABLE: ${self:service}-bars-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_BAR_TABLE}"

functions:
  createTeam:
    handler: teams/create.team
    events:
      - http:
          path: teams
          method: post
          cors: true

  updateTeam:
    handler: teams/update.team
    events:
      - http:
          path: teams/{id}
          method: put
          cors: true

  listTeams:
    handler: teams/get.teams
    events: 
      - http:
          path: teams
          method: get
          cors: true

  listBar:
    handler: bars/list.bar
    events:
      - http:
          path: bars
          method: get
          cors: true

  createBar:
    handler: bars/create.bar
    events:
      - http:
          path: bars
          method: post
          cors: true
  getBar:
    handler: bars/get.bar
    events:
      - http:
          path: bars/{id}
          method: get
          cors: true

  updateBar:
    handler: bars/update.bar
    events:
      - http:
          path: bars/{id}
          method: put
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
    BarsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_BAR_TABLE}
